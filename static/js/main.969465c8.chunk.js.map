{"version":3,"sources":["components/Pokemon/Pokemon.js","containers/Pokedex/AllPokemon/AllPokemon.js","containers/Pokedex/PokedexEntry/PokedexEntry.js","assets/pokeball.png","containers/Pokedex/Pokedex.js","App.js","reportWebVitals.js","index.js"],"names":["pokemon","props","Figure","className","Image","src","sprite","alt","onClick","clicked","Caption","name","toUpperCase","substr","AllPokemon","state","sinnohPokemon","promises","pokedexNum","push","axios","get","then","response","data","catch","err","console","log","Promise","all","setState","this","map","to","pathname","stats","types","id","sprites","front_default","Component","specialPokemon","PokedexEntry","pokemonImg","pokemonFlavorText","error","location","flavor_text_entries","flavor_text","includes","split","results","typeStyles","width","height","lineHeight","background","borderRadius","toRender","Fragment","type","typeColor","style","fontWeight","base_stat","Pokedex","href","pokeball","path","exact","component","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.969465c8.chunk.js","sourcesContent":["import React from \"react\";\nimport Figure from \"react-bootstrap/Figure\";\n\nimport \"./Pokemon.css\";\n\nconst pokemon = (props) => {\n  return (\n    // <div>\n    //   <h3>{props.name}</h3>\n    //   <img src={props.sprite} alt=\"sprite\" onClick={props.clicked} />\n    // </div>\n    <Figure className=\"Pokemon\">\n      <Figure.Image src={props.sprite} alt=\"sprite\" onClick={props.clicked} />\n      <Figure.Caption>\n        <h3 className=\"text-center\">\n          {props.name[0].toUpperCase() + props.name.substr(1)}\n        </h3>\n      </Figure.Caption>\n    </Figure>\n  );\n};\n\nexport default pokemon;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport Pokemon from \"../../../components/Pokemon/Pokemon\";\nimport \"./AllPokemon.css\";\n\nclass AllPokemon extends Component {\n  state = {\n    sinnohPokemon: [],\n  };\n\n  componentDidMount() {\n    const sinnohPokemon = [];\n    const promises = [];\n    for (let pokedexNum = 387; pokedexNum <= 493; pokedexNum++) {\n      promises.push(\n        axios\n          .get(`https://pokeapi.co/api/v2/pokemon/${pokedexNum}/`)\n          .then((response) => {\n            sinnohPokemon.push(response.data);\n          })\n          .catch((err) => console.log(err))\n      );\n    }\n\n    Promise.all(promises).then(() => {\n      this.setState({ sinnohPokemon });\n    });\n  }\n\n  //   handlePokemonEntryClick = (id, stats) => {\n  //     console.log(id);\n  //     console.log(stats);\n  //     this.setState({\n  //       selectedPokemonId: id,\n  //       selectedPokemonStats: stats.map((stat) => stat.base_stat),\n  //       showAllPokemon: false,\n  //     });\n  //     console.log(this.state.selectedPokemonId);\n  //   };\n\n  render() {\n    return (\n      <div className=\"AllPokemon\">\n        <h1>Sinnoh Pokedex</h1>\n        <div>\n          {this.state.sinnohPokemon.map((pokemon) => {\n            return (\n              <Link\n                to={{\n                  pathname: pokemon.name,\n                  stats: pokemon.stats,\n                  types: pokemon.types,\n                  id: pokemon.id,\n                }}\n                key={pokemon.id}\n              >\n                <Pokemon\n                  name={pokemon.name}\n                  sprite={pokemon.sprites.front_default}\n                  types={pokemon.types}\n                  //   clicked={() =>\n                  //     this.handlePokemonEntryClick(pokemon.id, pokemon.stats)\n                  //   }\n                />\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AllPokemon;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./PokedexEntry.css\";\n\n// names of pokemon that have to be handled specially to get data\n// wormadam, giratina, shaymin\nconst specialPokemon = [\n  \"/wormadam-plant\",\n  \"/giratina-altered\",\n  \"/shaymin-land\",\n];\n\nclass PokedexEntry extends Component {\n  state = {\n    pokemonImg: null,\n    pokemonFlavorText: null,\n    stats: [],\n    types: [],\n    id: null,\n    error: false,\n  };\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    if (this.props.location.id) {\n      console.log(this.props);\n      axios\n        .get(\n          `https://pokeapi.co/api/v2/pokemon-species/${this.props.location.id}/`\n        )\n        .then((response) => {\n          // console.log(response.data.flavor_text_entries);\n          this.setState({\n            pokemonImg: `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${this.props.location.id}.png`,\n            pokemonFlavorText:\n              this.props.location.id === 388 || this.props.location.id === 479\n                ? response.data.flavor_text_entries[5].flavor_text\n                : response.data.flavor_text_entries[2].flavor_text,\n            // redundant setState if come from home page so temporary inefficient solution for now\n            // stats: this.props.location.stats,\n            // types: this.props.location.types,\n            // id: this.props.id,\n          });\n        })\n        .catch((err) => {\n          console.log(\"ERROR1\");\n          this.setState({\n            error: true,\n          });\n        });\n    } else {\n      // console.log(this.props);\n      console.log(specialPokemon.includes(this.props.location.pathname));\n      // helper functions for axios\n      const getGeneralPokemonData = () => {\n        return axios.get(\n          `https://pokeapi.co/api/v2/pokemon${this.props.location.pathname}`\n        );\n      };\n\n      const getAdditionalPokemonData = () => {\n        return axios.get(\n          specialPokemon.includes(this.props.location.pathname)\n            ? `https://pokeapi.co/api/v2/pokemon-species${\n                this.props.location.pathname.split(\"-\")[0]\n              }/`\n            : `https://pokeapi.co/api/v2/pokemon-species${this.props.location.pathname}`\n        );\n      };\n      Promise.all([getGeneralPokemonData(), getAdditionalPokemonData()])\n        .then((results) => {\n          console.log(results);\n          this.setState({\n            id: results[0].data.id,\n            stats: results[0].data.stats,\n            types: results[0].data.types,\n            pokemonImg: `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${results[0].data.id}.png`, // assume user doesn't manually input pokemon id in url\n            pokemonFlavorText:\n              results[0].data.id === 388 || results[0].data.id === 479\n                ? results[1].data.flavor_text_entries[5].flavor_text\n                : results[1].data.flavor_text_entries[2].flavor_text,\n          });\n          console.log(this.state);\n        })\n        .catch((err) => {\n          console.log(\"ERROR2\");\n          this.setState({\n            error: true,\n          });\n        });\n    }\n  }\n\n  // componentDidUpdate() {\n  //   console.log(\"componentDidUpdate\");\n  // }\n\n  render() {\n    if (this.state.error) {\n      console.log(\"LADFSFS\");\n      return <Redirect to=\"/\"></Redirect>;\n    }\n    const typeStyles = {\n      width: \"160px\",\n      height: \"80px\",\n      lineHeight: \"80px\",\n      background: \"#a84909\",\n      borderRadius: \"50%\",\n    };\n    let toRender = null;\n    if (this.state.id && this.state.stats && this.state.types) {\n      toRender = (\n        <React.Fragment>\n          <img src={this.state.pokemonImg} alt=\"pokemonImg\" />\n          <ul>\n            {this.state.types.map((type) => {\n              let typeColor = null;\n              switch (type.type.name) {\n                case \"grass\":\n                  typeColor = \"#78C850\";\n                  break;\n                case \"water\":\n                  typeColor = \"#6890F0\";\n                  break;\n                case \"fire\":\n                  typeColor = \"#F08030\";\n                  break;\n                case \"electric\":\n                  typeColor = \"#F8D030\";\n                  break;\n                case \"flying\":\n                  typeColor = \"#A890F0\";\n                  break;\n                case \"poison\":\n                  typeColor = \"#A040A0\";\n                  break;\n                case \"ground\":\n                  typeColor = \"#E0C068\";\n                  break;\n                case \"rock\":\n                  typeColor = \"#B8A038\";\n                  break;\n                case \"bug\":\n                  typeColor = \"#A8B820\";\n                  break;\n                case \"ghost\":\n                  typeColor = \"#705898\";\n                  break;\n                case \"psychic\":\n                  typeColor = \"#F85888\";\n                  break;\n                case \"ice\":\n                  typeColor = \"#98D8D8\";\n                  break;\n                case \"dragon\":\n                  typeColor = \"#7038F8\";\n                  break;\n                case \"dark\":\n                  typeColor = \"#705848\";\n                  break;\n                case \"fairy\":\n                  typeColor = \"#EE99AC\";\n                  break;\n                case \"fighting\":\n                  typeColor = \"#C03028\";\n                  break;\n                case \"steel\":\n                  typeColor = \"#B8B8D0\";\n                  break;\n                default:\n                  typeColor = \"#A8A878\"; // default is normal type\n              }\n              return (\n                <li key={type} style={{ ...typeStyles, background: typeColor }}>\n                  {type.type.name}\n                </li>\n              );\n            })}\n          </ul>\n          <p>{this.state.pokemonFlavorText}</p>\n          <h3>Stats</h3>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>HP: </span>\n            {this.state.stats[0].base_stat}\n          </p>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>Attack: </span>\n            {this.state.stats[1].base_stat}\n          </p>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>Defense: </span>\n            {this.state.stats[2].base_stat}\n          </p>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>Sp. Atk: </span>\n            {this.state.stats[3].base_stat}\n          </p>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>Sp. Def: </span>\n            {this.state.stats[4].base_stat}\n          </p>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>Speed: </span>\n            {this.state.stats[5].base_stat}\n          </p>\n        </React.Fragment>\n      );\n    } else if (\n      this.props.location.id &&\n      this.props.location.types &&\n      this.props.location.stats\n    ) {\n      toRender = (\n        <React.Fragment>\n          <p>{this.props.id}</p>\n          <img src={this.state.pokemonImg} alt=\"pokemonImg\" />\n          <ul>\n            {this.props.location.types.map((type) => {\n              let typeColor = null;\n              switch (type.type.name) {\n                case \"grass\":\n                  typeColor = \"#78C850\";\n                  break;\n                case \"water\":\n                  typeColor = \"#6890F0\";\n                  break;\n                case \"fire\":\n                  typeColor = \"#F08030\";\n                  break;\n                case \"electric\":\n                  typeColor = \"#F8D030\";\n                  break;\n                case \"flying\":\n                  typeColor = \"#A890F0\";\n                  break;\n                case \"poison\":\n                  typeColor = \"#A040A0\";\n                  break;\n                case \"ground\":\n                  typeColor = \"#E0C068\";\n                  break;\n                case \"rock\":\n                  typeColor = \"#B8A038\";\n                  break;\n                case \"bug\":\n                  typeColor = \"#A8B820\";\n                  break;\n                case \"ghost\":\n                  typeColor = \"#705898\";\n                  break;\n                case \"psychic\":\n                  typeColor = \"#F85888\";\n                  break;\n                case \"ice\":\n                  typeColor = \"#98D8D8\";\n                  break;\n                case \"dragon\":\n                  typeColor = \"#7038F8\";\n                  break;\n                case \"dark\":\n                  typeColor = \"#705848\";\n                  break;\n                case \"fairy\":\n                  typeColor = \"#EE99AC\";\n                  break;\n                case \"fighting\":\n                  typeColor = \"#C03028\";\n                  break;\n                case \"steel\":\n                  typeColor = \"#B8B8D0\";\n                  break;\n                default:\n                  typeColor = \"#A8A878\"; // default is normal type\n              }\n              return (\n                <li key={type} style={{ ...typeStyles, background: typeColor }}>\n                  {type.type.name}\n                </li>\n              );\n            })}\n          </ul>\n          <p>{this.state.pokemonFlavorText}</p>\n          <h3>Stats</h3>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>HP: </span>\n            {this.props.location.stats[0].base_stat}\n          </p>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>Attack: </span>\n            {this.props.location.stats[1].base_stat}\n          </p>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>Defense: </span>\n            {this.props.location.stats[2].base_stat}\n          </p>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>Sp. Atk: </span>\n            {this.props.location.stats[3].base_stat}\n          </p>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>Sp. Def: </span>\n            {this.props.location.stats[4].base_stat}\n          </p>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>Speed: </span>\n            {this.props.location.stats[5].base_stat}\n          </p>\n        </React.Fragment>\n      );\n    }\n    return <div className=\"PokedexEntry\">{toRender}</div>;\n  }\n}\n\nexport default PokedexEntry;\n","export default __webpack_public_path__ + \"static/media/pokeball.14f577ae.png\";","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport AllPokemon from \"./AllPokemon/AllPokemon\";\nimport PokedexEntry from \"./PokedexEntry/PokedexEntry\";\nimport pokeball from \"../../assets/pokeball.png\";\nimport \"./Pokedex.css\"; // global styling atm\n\nclass Pokedex extends Component {\n  render() {\n    return (\n      <div className=\"Pokedex\">\n        <header>\n          <ul>\n            <li>\n              <a href=\"/\">\n                <img src={pokeball} alt=\"pokeball\" width=\"50\" height=\"50\"></img>\n              </a>\n            </li>\n          </ul>\n        </header>\n        <Switch>\n          <Route path=\"/\" exact component={AllPokemon} />\n          <Route path=\"/:pokemon\" component={PokedexEntry} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Pokedex;\n","import React, { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Pokedex from \"./containers/Pokedex/Pokedex\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename=\"/pokedex\">\n        <Pokedex />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}